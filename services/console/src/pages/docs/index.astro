---
import { getCollection } from "astro:content";
import DocsLayout from "../../layouts/docs/DocsLayout.astro";
import {defaultLang} from "../../i18n/ui.js";

async function getLangCollection(collection: string) {
  const pages = await getCollection(collection);
  return pages.map(page => {
    const [lang, ...slug] = page.id.substring(0, page.id.lastIndexOf('.'))?.split('/');
    return { params: { lang, slug: slug.join('/') || undefined }, props: page }
  }).filter(page => page.params.lang === defaultLang).sort((a, b) => a.props.data.sortOrder - b.props.data.sortOrder);
}

const tutorial = await getLangCollection("tutorial");

const how_to = await getCollection("how_to");
how_to.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const explanation = await getCollection("explanation");
explanation.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const reference = await getCollection("reference");
reference.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const title = "Bencher Docs";
const description =
  "Table of contents for the Bencher documentation. Learn how to setup continuous benchmarking for your project.";
---

<DocsLayout title={title} description={description} heading={title}>
  <div class="menu">
    <p class="menu-label">Tutorial</p>
    <ul class="menu-list">
      {
        tutorial.map((page) => (
          <li>
            <a href={`/docs/tutorial/${page.params.slug}`}>{page.props.data.heading}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">How To</p>
    <ul class="menu-list">
      {
        how_to.map((page) => (
          <li>
            <a href={`/docs/how-to/${page.slug}`}>{page.data.heading}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">Explanation</p>
    <ul class="menu-list">
      {
        explanation.map((page) => (
          <li>
            <a href={`/docs/explanation/${page.slug}`}>{page.data.heading}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">Reference</p>
    <ul class="menu-list">
      <li>
        <a href="/docs/reference/api">REST API</a>
      </li>
      <li>
        <a href="/docs/reference/architecture">Architecture</a>
      </li>
      {
        reference.map((page) => (
          <li>
            <a href={`/docs/reference/${page.slug}`}>{page.data.heading}</a>
          </li>
        ))
      }
    </ul>
  </div>
  <h3 class="title">Also available in:</h3>
  <ul>
    <li>
      <a href="/docs/es">Español</a>
    </li>
    <li>
      <a href="/docs/fr">Français</a>
    </li>
  </ul>
</DocsLayout>
