---
import DocsLayout from "../../../../layouts/docs/DocsLayout.astro";
import { getCollection } from "astro:content";
import AuthOverride from "../../../../components/auth/AuthOverride";
import AddAnApiToken from "../../../../components/docs/override/AddAnApiToken";
import { Language } from "../../../../i18n/ui";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const pages = await getCollection("tutorial");
  return pages.map(page => {
    const [lang, ...slug] = page.id.substring(0, page.id.lastIndexOf('.'))?.split('/');
    return { params: { lang, slug: slug.join('/') || undefined }, props: page }
  }).filter(page => page.params.slug === "quick-start");
}
// 2. When it's time to render, you can get the entry directly from the prop
const { lang } = Astro.params;

const signupId = () => {
  switch (lang) {
    case Language.de:
      return "melden-sie-sich-für-bencher-cloud-an";
    case Language.es:
      return "regístrate-en-bencher-cloud";
    case Language.fr:
      return "inscrivez-vous-à-bencher-cloud";
    case Language.pt:
      return "inscreva-se-para-o-bencher-cloud";
    default:
      return "";
  }
}
const signupText = () => {
  switch (lang) {
    case Language.de:
      return "Sie sind für Bencher Cloud angemeldet";
    case Language.es:
      return "Estás registrado en Bencher Cloud";
    case Language.fr:
      return "Vous êtes inscrit à Bencher Cloud";
    case Language.pt:
      return "Você está inscrito no Bencher Cloud";
    default:
      return "You are signed up for Bencher Cloud";
  }
}
const tokenId = () => {
  switch (lang) {
    case Language.de:
      return "fügen-sie-einen-api-token-hinzu";
    case Language.es:
      return "añadir-un-token-de-api";
    case Language.fr:
      return "ajouter-un-token-api";
    case Language.pt:
      return "adicione-um-token-de-api";
    default:
      return "";
  }
}
const tokenText = () => {
  switch (lang) {
    case Language.de:
      return "Fügen Sie ein API-Token hinzu";
    case Language.es:
      return "Añadir un token de API";
    case Language.fr:
      return "Ajouter un jeton API";
    case Language.pt:
      return "Adicionar um token de API";
    default:
      return "Add an API Token";
  }
}

const page = Astro.props;
const { Content } = await page.render();
---

<DocsLayout
  title={page?.data?.title}
  description={page?.data?.description}
  heading={page?.data?.heading}
  lang={lang}
>
  <Content />
  <AuthOverride client:only="solid-js" elementId={signupId()}>
    <h4 id={signupId()}>✅ {signupText}</h4>
  </AuthOverride>
  <AuthOverride client:only="solid-js" elementId={tokenId()}>
    <h4 id={tokenId()}>
      <AddAnApiToken client:only="solid-js" text={tokenText()} />
    </h4>
  </AuthOverride>
</DocsLayout>
