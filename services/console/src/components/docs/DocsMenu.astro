---
import { getCollection } from "astro:content";
import type DocsTab from "./docs_tab";
import {Language, defaultLang, showDefaultLang, tutorial } from "../../i18n/ui.ts";
import {getLangCollection} from "../../i18n/utils.ts"

interface Props {
  tab: DocsTab;
  lang?: undefined | string;
}

// Docs
const tutorialCollection = await getLangCollection("tutorial");

const how_to = await getCollection("how_to");
how_to.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const explanation = await getCollection("explanation");
explanation.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const reference = await getCollection("reference");
reference.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

// Learn
const rust = await getCollection("rust");
rust.sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const { tab } = Astro.props;
const lang: Language = Astro.props.lang ?? defaultLang;
const langPath = !showDefaultLang && lang === defaultLang ?  "" : `${lang}/`;
---

<aside class="menu is-sticky">
  <div id={tab} class="tabs is-centered">
    <ul>
      <li id="docs"><a>Docs</a></li>
      <li id="learn"><a>Learn</a></li>
    </ul>
  </div>
  <div id="docs-menu">
    <p class="menu-label">{tutorial(lang)}</p>
    <ul class="menu-list">
      {
        tutorialCollection[lang]?.map((page) => (
          <li>
            <a href={`/docs/${langPath}tutorial/${page.slug}`}>{page.data.title}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">How To</p>
    <ul class="menu-list">
      {
        how_to.map((page) => (
          <li>
            <a href={`/docs/how-to/${page.slug}`}>{page.data.title}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">Explanation</p>
    <ul class="menu-list">
      {
        explanation.map((page) => (
          <li>
            <a href={`/docs/explanation/${page.slug}`}>{page.data.title}</a>
          </li>
        ))
      }
    </ul>
    <p class="menu-label">Reference</p>
    <ul class="menu-list">
      <li>
        <a href="/docs/reference/api">REST API</a>
      </li>
      <li>
        <a href="/docs/reference/architecture">Architecture</a>
      </li>
      {
        reference.map((page) => (
          <li>
            <a href={`/docs/reference/${page.slug}`}>{page.data.title}</a>
          </li>
        ))
      }
    </ul>
  </div>
  <div id="learn-menu">
    <a class="menu-label" href="/learn/benchmarking">Benchmarking</a>
    <ul class="menu-list">
      <li>
        <a href="/learn/benchmarking/rust">Rust</a>
        <ul>
        {
          rust.map((page) => (
            <li>
              <a href={`/learn/benchmarking/rust/${page.slug}`}>{page.data.title}</a>
            </li>
          ))
        }
        </ul>
      </li>
    </ul>
  </div>
</aside>
<script >
  import DocsTab from "./docs_tab";

  // Find all buttons with the `alert` class on the page.
  const docs = document.getElementById("docs");
  const learn = document.getElementById("learn");
  const docsMenu = document.getElementById("docs-menu");
  const learnMenu = document.getElementById("learn-menu");

  function setDocs() {
    docs?.classList.add("is-active");
    learn?.classList.remove("is-active");

    docsMenu.style.display = "block";
    learnMenu.style.display = "none";
  }

  function setLearn() {
    docs?.classList.remove("is-active");
    learn?.classList.add("is-active");

    docsMenu.style.display = "none";
    learnMenu.style.display = "block";
  }

  if (document.getElementById(DocsTab.Docs)) {
    setDocs();
  } else if (document.getElementById(DocsTab.Learn)) {
    setLearn();
  }

  docs?.addEventListener("click", () => {
    setDocs();
  });
  learn?.addEventListener("click", () => {
    setLearn();
  });
</script>