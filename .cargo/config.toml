[alias]
xtask = "run --manifest-path ./xtask/Cargo.toml --"

[target.'cfg(all())']
rustflags = [
    # https://github.com/rust-lang/rust-clippy
    "-Wclippy::all",
    # cargo
    "-Wclippy::cargo",
    "-Aclippy::cargo_common_metadata",   # Checks to see if all common metadata is defined in Cargo.toml.
    "-Aclippy::multiple_crate_versions", # Checks to see if multiple versions of a crate are being used.
    # pedantic
    "-Wclippy::pedantic",
    "-Aclippy::missing_errors_doc",      # Checks the doc comments of publicly visible functions that return a Result type and warns if there is no # Errors section.
    "-Aclippy::missing_panics_doc",      # Checks the doc comments of publicly visible functions that may panic and warns if there is no # Panics section.
    "-Aclippy::module_name_repetitions", # Detects type names that are prefixed or suffixed by the containing module’s name.
    "-Aclippy::must_use_candidate",      # Checks for public functions that have no #[must_use] attribute, but return something not already marked must-use, have no mutable arg and mutate no statics.
    # restriction
    # "-Wclippy::restriction",
    "-Wclippy::as_underscore",                  # Checks for the usage of as _ conversion using inferred type.
    "-Wclippy::big_endian_bytes",               # Checks for the usage of the to_be_bytes method and/or the function from_be_bytes.
    "-Wclippy::dbg_macro",                      # Checks for usage of the dbg! macro.
    "-Wclippy::decimal_literal_representation", # Warns if there is a better representation for a numeric literal.
    "-Wclippy::exit",                           # Detects calls to the exit() function which terminates the program.
    "-Wclippy::expect_used",                    # Checks for .expect() or .expect_err() calls on Results and .expect() call on Options.
    "-Wclippy::filetype_is_file",               # Checks for FileType::is_file().
    "-Wclippy::float_cmp_const",                # Checks for (in-)equality comparisons on floating-point value and constant, except in functions called *eq* (which probably implement equality for a type involving floats).
    "-Wclippy::fn_to_numeric_cast_any",         # Checks for casts of a function pointer to any integer type.
    "-Wclippy::format_push_string",             # Detects cases where the result of a format! call is appended to an existing String.
    "-Wclippy::get_unwrap",                     # Checks for usage of .get().unwrap() (or .get_mut().unwrap) on a standard library type which implements Index
    "-Wclippy::host_endian_bytes",              # Checks for the usage of the to_ne_bytes method and/or the function from_ne_bytes.
    "-Wclippy::if_then_some_else_none",         # Checks for if-else that could be written using either bool::then or bool::then_some.
    "-Wclippy::impl_trait_in_params",           # Lints when impl Trait is being used in a function’s parameters.
    "-Wclippy::indexing_slicing",               # Checks for usage of indexing or slicing. Arrays are special cases, this lint does report on arrays if we can tell that slicing operations are in bounds and does not lint on constant usize indexing on arrays because that is handled by rustc’s const_err lint.
    "-Wclippy::inline_asm_x86_att_syntax",      # Checks for usage of AT&T x86 assembly syntax.
    "-Wclippy::inline_asm_x86_intel_syntax",    # Checks for usage of Intel x86 assembly syntax.
    "-Wclippy::integer_division",               # Checks for division of integers
    "-Wclippy::large_include_file",             # Checks for the inclusion of large files via include_bytes!() and include_str!()
    "-Wclippy::let_underscore_must_use",        # Checks for let _ = <expr> where expr is must use
    "-Wclippy::let_underscore_untyped",         # Checks for let _ = <expr> without a type annotation, and suggests to either provide one, or remove the let keyword altogether.
    "-Wclippy::little_endian_bytes",            # Checks for the usage of the to_le_bytes method and/or the function from_le_bytes.
    "-Wclippy::lossy_float_literal",            # Checks for whole number float literals that cannot be represented as the underlying type without loss.

    "-Wclippy::non_ascii_idents", # Warns if there is a better representation for a numeric literal.

    "-Wclippy::print_stdout", # Checks for printing on stdout. The purpose of this lint is to catch debugging remnants.
    "-Wclippy::print_stderr", # Checks for printing on stderr. The purpose of this lint is to catch debugging remnants.
]

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/mold"]

[target.aarch64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=/usr/local/bin/mold"]
